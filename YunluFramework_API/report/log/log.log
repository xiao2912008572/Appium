2018-05-30 15:02:27,155 - INFO - ****************************************SpaceAPI_Private：开始****************************************
2018-05-30 15:02:27,156 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,158 - INFO - 未执行测试用例编号 : 1_1 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,158 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,159 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,159 - INFO - 未执行测试用例编号 : 1_2 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,159 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,159 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,160 - INFO - 未执行测试用例编号 : 1_3 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,160 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,160 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,160 - INFO - 未执行测试用例编号 : 1_4 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,161 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,161 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,161 - INFO - 未执行测试用例编号 : 1_5 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,161 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,162 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,162 - INFO - 未执行测试用例编号 : 1_6 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,162 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,163 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,163 - INFO - 未执行测试用例编号 : 1_7 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,163 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,163 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,163 - INFO - 未执行测试用例编号 : 1_8 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,164 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,164 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,164 - INFO - 未执行测试用例编号 : 1_9 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,164 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,165 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,165 - INFO - 未执行测试用例编号 : 1_10 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,166 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,166 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,166 - INFO - 未执行测试用例编号 : 1_11 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,167 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,167 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,167 - INFO - 未执行测试用例编号 : 1_12 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,167 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,168 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,168 - INFO - 未执行测试用例编号 : 1_13 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,169 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,169 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,169 - INFO - 未执行测试用例编号 : 1_14 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,170 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,170 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,170 - INFO - 未执行测试用例编号 : 1_14 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,170 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,171 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,171 - INFO - 未执行测试用例编号 : 1_15 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,171 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,172 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,172 - INFO - 未执行测试用例编号 : 1_15 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,172 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,173 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,173 - INFO - 未执行测试用例编号 : 1_15 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,174 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,174 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,174 - INFO - 未执行测试用例编号 : 1_16 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,174 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,175 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,175 - INFO - 未执行测试用例编号 : 1_17 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,175 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,175 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,176 - INFO - 未执行测试用例编号 : 2_1 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,176 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,176 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,176 - INFO - 未执行测试用例编号 : 2_2 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,177 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,177 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,177 - INFO - 未执行测试用例编号 : 2_3 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,177 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,178 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,178 - INFO - 未执行测试用例编号 : 2_4 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,178 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,178 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,179 - INFO - 未执行测试用例编号 : 2_5 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,179 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,179 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,179 - INFO - 未执行测试用例编号 : 2_6 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,180 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,180 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,180 - INFO - 未执行测试用例编号 : 2_7 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,180 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,181 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,181 - INFO - 未执行测试用例编号 : 2_8 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,182 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,182 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,182 - INFO - 未执行测试用例编号 : 2_9 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,182 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,183 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,183 - INFO - 未执行测试用例编号 : 2_10 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,183 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,184 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,184 - INFO - 未执行测试用例编号 : 3_1 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,184 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,185 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,185 - INFO - 未执行测试用例编号 : 3_2 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,185 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,185 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,186 - INFO - 未执行测试用例编号 : 3_3 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,186 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,186 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,186 - INFO - 未执行测试用例编号 : 4_1 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,187 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,187 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,187 - INFO - 未执行测试用例编号 : 4_2 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,187 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,188 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,188 - INFO - 未执行测试用例编号 : 4_3 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,188 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,189 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,189 - INFO - 未执行测试用例编号 : 4_4 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,190 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,190 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,190 - INFO - 未执行测试用例编号 : 4_5 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,191 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,191 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,191 - INFO - 未执行测试用例编号 : 4_6 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,191 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,192 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,192 - INFO - 未执行测试用例编号 : 4_7 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,192 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,192 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,192 - INFO - 未执行测试用例编号 : 4_8 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,193 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,193 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,193 - INFO - 未执行测试用例编号 : 4_9 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,193 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,194 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,194 - INFO - 未执行测试用例编号 : 4_10 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,194 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,194 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,195 - INFO - 未执行测试用例编号 : 4_11 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,195 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,195 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,195 - INFO - 未执行测试用例编号 : 4_12 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,196 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,196 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,196 - INFO - 未执行测试用例编号 : 5_1 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,196 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,197 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,197 - INFO - 未执行测试用例编号 : 5_2 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,198 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,198 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,198 - INFO - 未执行测试用例编号 : 5_3 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,199 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,199 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,199 - INFO - 未执行测试用例编号 : 5_4 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,199 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,200 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,200 - INFO - 未执行测试用例编号 : 5_5 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,200 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,200 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,201 - INFO - 未执行测试用例编号 : 5_6 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,201 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,202 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,202 - INFO - 未执行测试用例编号 : 5_7 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,202 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,202 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,203 - INFO - 未执行测试用例编号 : 5_8 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,203 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,203 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,353 - INFO - 1. 接口编号 : 5_9
2018-05-30 15:02:27,354 - INFO - 2. 接口名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,356 - INFO - 3. 接口描述 : 县机构 - 扶贫组长
2018-05-30 15:02:27,356 - INFO - 4. 接口路由 : /api/v1/team/18953/can_do
2018-05-30 15:02:27,356 - INFO - 5. 接口方式 : GET
2018-05-30 15:02:27,356 - INFO - 6. 接口头部 : 
2018-05-30 15:02:27,357 - INFO - 7. 接口数据 : {'token': '6a16519dbdb50357064550bcaa4e8993'}
2018-05-30 15:02:27,357 - INFO - 8. 接口检查 : True=[Archive][create];
False=[Archive][destroy];
False=[Archive][publish];
True=[Archive][read];
False=[Archive][recall];
False=[Archive][update];

False=[Client][admin];
True=[Client][create];
False=[Client][destroy];
True=[Client][read];
False=[Client][update];

False=[ClientKeyword][read];

False=[Department][destroy];
True=[Department][read];
False=[Department][update];

False=[EnablePackage][read];
False=[EnablePackage][update];

False=[Group][destroy];
True=[Group][read];
False=[Group][update];

True=[Guild][create];
True=[Guild][destroy];
True=[Guild][update];

False=[OrderForm][read];
False=[OrderForm][update];

False=[OrgWallet][read];
False=[OrgWallet][update];

False=[Organization][destroy];
False=[Organization][read];
False=[Organization][update];

True=[Photo][create];
False=[Photo][destroy];
True=[Photo][read];

True=[Procedure][create];
True=[Procedure][read];
True=[Procedure][update];

False=[Product][audit];
False=[Product][create];
False=[Product][destroy];
False=[Product][publish];
False=[Product][read];
False=[Product][recall];
False=[Product][update];

False=[Team][create];
False=[Team][destroy];
True=[Team][read];
False=[Team][update];

False=[Visit][read];

2018-05-30 15:02:27,357 - INFO - 9. 预期状态 ：
2018-05-30 15:02:27,357 - INFO - 10.接口预期 : 200
2018-05-30 15:02:27,358 - INFO - 11.接口返回 : {
    "Archive": {
        "create": true,
        "destroy": false,
        "publish": false,
        "read": true,
        "recall": false,
        "update": false
    },
    "Client": {
        "admin": false,
        "create": true,
        "destroy": false,
        "read": true,
        "update": false
    },
    "ClientKeyword": {
        "read": false
    },
    "Department": {
        "destroy": false,
        "read": true,
        "update": false
    },
    "EnablePackage": {
        "read": false,
        "update": false
    },
    "Group": {
        "destroy": false,
        "read": true,
        "update": false
    },
    "Guild": {
        "create": true,
        "destroy": true,
        "update": true
    },
    "OrderForm": {
        "read": false,
        "update": false
    },
    "OrgWallet": {
        "read": false,
        "update": false
    },
    "Organization": {
        "destroy": false,
        "read": false,
        "update": false
    },
    "Photo": {
        "create": true,
        "destroy": false,
        "read": true
    },
    "Procedure": {
        "create": true,
        "read": true,
        "update": true
    },
    "Product": {
        "audit": false,
        "create": false,
        "destroy": false,
        "publish": false,
        "read": false,
        "recall": false,
        "update": false
    },
    "Team": {
        "create": false,
        "destroy": false,
        "read": true,
        "update": false
    },
    "Visit": {
        "read": false
    }
}
2018-05-30 15:02:27,358 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,358 - DEBUG - 检查项['Archive', 'create']
2018-05-30 15:02:27,359 - DEBUG - flag = =
2018-05-30 15:02:27,359 - DEBUG - 进入等于
2018-05-30 15:02:27,359 - DEBUG - 进入等于阶段后的---->预期param[0] = True
2018-05-30 15:02:27,359 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,360 - DEBUG - 进入等于阶段后的---->实际value 值 = True
2018-05-30 15:02:27,360 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,360 - DEBUG - 进入elif2
2018-05-30 15:02:27,361 - DEBUG - true | value = True
2018-05-30 15:02:27,361 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,361 - DEBUG - 检查项['Archive', 'destroy']
2018-05-30 15:02:27,361 - DEBUG - flag = =
2018-05-30 15:02:27,362 - DEBUG - 进入等于
2018-05-30 15:02:27,362 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,362 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,362 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,363 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,363 - DEBUG - 进入elif2
2018-05-30 15:02:27,363 - DEBUG - true | value = False
2018-05-30 15:02:27,363 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,364 - DEBUG - 检查项['Archive', 'publish']
2018-05-30 15:02:27,364 - DEBUG - flag = =
2018-05-30 15:02:27,364 - DEBUG - 进入等于
2018-05-30 15:02:27,364 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,365 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,365 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,365 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,365 - DEBUG - 进入elif2
2018-05-30 15:02:27,365 - DEBUG - true | value = False
2018-05-30 15:02:27,366 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,366 - DEBUG - 检查项['Archive', 'read']
2018-05-30 15:02:27,366 - DEBUG - flag = =
2018-05-30 15:02:27,366 - DEBUG - 进入等于
2018-05-30 15:02:27,366 - DEBUG - 进入等于阶段后的---->预期param[0] = True
2018-05-30 15:02:27,367 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,367 - DEBUG - 进入等于阶段后的---->实际value 值 = True
2018-05-30 15:02:27,367 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,367 - DEBUG - 进入elif2
2018-05-30 15:02:27,368 - DEBUG - true | value = True
2018-05-30 15:02:27,368 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,368 - DEBUG - 检查项['Archive', 'recall']
2018-05-30 15:02:27,368 - DEBUG - flag = =
2018-05-30 15:02:27,369 - DEBUG - 进入等于
2018-05-30 15:02:27,369 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,369 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,369 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,370 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,370 - DEBUG - 进入elif2
2018-05-30 15:02:27,370 - DEBUG - true | value = False
2018-05-30 15:02:27,370 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,371 - DEBUG - 检查项['Archive', 'update']
2018-05-30 15:02:27,371 - DEBUG - flag = =
2018-05-30 15:02:27,371 - DEBUG - 进入等于
2018-05-30 15:02:27,371 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,372 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,372 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,372 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,373 - DEBUG - 进入elif2
2018-05-30 15:02:27,373 - DEBUG - true | value = False
2018-05-30 15:02:27,373 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,373 - DEBUG - 检查项['Client', 'admin']
2018-05-30 15:02:27,373 - DEBUG - flag = =
2018-05-30 15:02:27,374 - DEBUG - 进入等于
2018-05-30 15:02:27,374 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,374 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,374 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,375 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,375 - DEBUG - 进入elif2
2018-05-30 15:02:27,375 - DEBUG - true | value = False
2018-05-30 15:02:27,375 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,375 - DEBUG - 检查项['Client', 'create']
2018-05-30 15:02:27,376 - DEBUG - flag = =
2018-05-30 15:02:27,376 - DEBUG - 进入等于
2018-05-30 15:02:27,376 - DEBUG - 进入等于阶段后的---->预期param[0] = True
2018-05-30 15:02:27,376 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,377 - DEBUG - 进入等于阶段后的---->实际value 值 = True
2018-05-30 15:02:27,377 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,377 - DEBUG - 进入elif2
2018-05-30 15:02:27,377 - DEBUG - true | value = True
2018-05-30 15:02:27,377 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,378 - DEBUG - 检查项['Client', 'destroy']
2018-05-30 15:02:27,378 - DEBUG - flag = =
2018-05-30 15:02:27,378 - DEBUG - 进入等于
2018-05-30 15:02:27,378 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,379 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,379 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,379 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,379 - DEBUG - 进入elif2
2018-05-30 15:02:27,379 - DEBUG - true | value = False
2018-05-30 15:02:27,380 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,380 - DEBUG - 检查项['Client', 'read']
2018-05-30 15:02:27,380 - DEBUG - flag = =
2018-05-30 15:02:27,380 - DEBUG - 进入等于
2018-05-30 15:02:27,381 - DEBUG - 进入等于阶段后的---->预期param[0] = True
2018-05-30 15:02:27,381 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,381 - DEBUG - 进入等于阶段后的---->实际value 值 = True
2018-05-30 15:02:27,381 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,382 - DEBUG - 进入elif2
2018-05-30 15:02:27,382 - DEBUG - true | value = True
2018-05-30 15:02:27,382 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,382 - DEBUG - 检查项['Client', 'update']
2018-05-30 15:02:27,382 - DEBUG - flag = =
2018-05-30 15:02:27,383 - DEBUG - 进入等于
2018-05-30 15:02:27,383 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,383 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,384 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,384 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,384 - DEBUG - 进入elif2
2018-05-30 15:02:27,384 - DEBUG - true | value = False
2018-05-30 15:02:27,385 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,385 - DEBUG - 检查项['ClientKeyword', 'read']
2018-05-30 15:02:27,385 - DEBUG - flag = =
2018-05-30 15:02:27,385 - DEBUG - 进入等于
2018-05-30 15:02:27,386 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,386 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,386 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,386 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,387 - DEBUG - 进入elif2
2018-05-30 15:02:27,387 - DEBUG - true | value = False
2018-05-30 15:02:27,387 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,387 - DEBUG - 检查项['Department', 'destroy']
2018-05-30 15:02:27,388 - DEBUG - flag = =
2018-05-30 15:02:27,388 - DEBUG - 进入等于
2018-05-30 15:02:27,388 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,388 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,389 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,389 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,389 - DEBUG - 进入elif2
2018-05-30 15:02:27,389 - DEBUG - true | value = False
2018-05-30 15:02:27,390 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,390 - DEBUG - 检查项['Department', 'read']
2018-05-30 15:02:27,390 - DEBUG - flag = =
2018-05-30 15:02:27,390 - DEBUG - 进入等于
2018-05-30 15:02:27,390 - DEBUG - 进入等于阶段后的---->预期param[0] = True
2018-05-30 15:02:27,391 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,391 - DEBUG - 进入等于阶段后的---->实际value 值 = True
2018-05-30 15:02:27,391 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,391 - DEBUG - 进入elif2
2018-05-30 15:02:27,392 - DEBUG - true | value = True
2018-05-30 15:02:27,392 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,392 - DEBUG - 检查项['Department', 'update']
2018-05-30 15:02:27,392 - DEBUG - flag = =
2018-05-30 15:02:27,393 - DEBUG - 进入等于
2018-05-30 15:02:27,393 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,393 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,393 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,393 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,394 - DEBUG - 进入elif2
2018-05-30 15:02:27,394 - DEBUG - true | value = False
2018-05-30 15:02:27,394 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,394 - DEBUG - 检查项['EnablePackage', 'read']
2018-05-30 15:02:27,395 - DEBUG - flag = =
2018-05-30 15:02:27,395 - DEBUG - 进入等于
2018-05-30 15:02:27,395 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,395 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,395 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,396 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,396 - DEBUG - 进入elif2
2018-05-30 15:02:27,396 - DEBUG - true | value = False
2018-05-30 15:02:27,396 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,397 - DEBUG - 检查项['EnablePackage', 'update']
2018-05-30 15:02:27,397 - DEBUG - flag = =
2018-05-30 15:02:27,397 - DEBUG - 进入等于
2018-05-30 15:02:27,397 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,397 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,398 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,398 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,398 - DEBUG - 进入elif2
2018-05-30 15:02:27,398 - DEBUG - true | value = False
2018-05-30 15:02:27,399 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,399 - DEBUG - 检查项['Group', 'destroy']
2018-05-30 15:02:27,399 - DEBUG - flag = =
2018-05-30 15:02:27,399 - DEBUG - 进入等于
2018-05-30 15:02:27,399 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,400 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,400 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,400 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,400 - DEBUG - 进入elif2
2018-05-30 15:02:27,401 - DEBUG - true | value = False
2018-05-30 15:02:27,401 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,401 - DEBUG - 检查项['Group', 'read']
2018-05-30 15:02:27,402 - DEBUG - flag = =
2018-05-30 15:02:27,402 - DEBUG - 进入等于
2018-05-30 15:02:27,402 - DEBUG - 进入等于阶段后的---->预期param[0] = True
2018-05-30 15:02:27,403 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,403 - DEBUG - 进入等于阶段后的---->实际value 值 = True
2018-05-30 15:02:27,403 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,403 - DEBUG - 进入elif2
2018-05-30 15:02:27,404 - DEBUG - true | value = True
2018-05-30 15:02:27,404 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,404 - DEBUG - 检查项['Group', 'update']
2018-05-30 15:02:27,404 - DEBUG - flag = =
2018-05-30 15:02:27,405 - DEBUG - 进入等于
2018-05-30 15:02:27,405 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,405 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,405 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,406 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,406 - DEBUG - 进入elif2
2018-05-30 15:02:27,406 - DEBUG - true | value = False
2018-05-30 15:02:27,406 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,407 - DEBUG - 检查项['Guild', 'create']
2018-05-30 15:02:27,407 - DEBUG - flag = =
2018-05-30 15:02:27,407 - DEBUG - 进入等于
2018-05-30 15:02:27,407 - DEBUG - 进入等于阶段后的---->预期param[0] = True
2018-05-30 15:02:27,408 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,408 - DEBUG - 进入等于阶段后的---->实际value 值 = True
2018-05-30 15:02:27,408 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,408 - DEBUG - 进入elif2
2018-05-30 15:02:27,408 - DEBUG - true | value = True
2018-05-30 15:02:27,409 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,409 - DEBUG - 检查项['Guild', 'destroy']
2018-05-30 15:02:27,409 - DEBUG - flag = =
2018-05-30 15:02:27,409 - DEBUG - 进入等于
2018-05-30 15:02:27,410 - DEBUG - 进入等于阶段后的---->预期param[0] = True
2018-05-30 15:02:27,410 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,410 - DEBUG - 进入等于阶段后的---->实际value 值 = True
2018-05-30 15:02:27,410 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,410 - DEBUG - 进入elif2
2018-05-30 15:02:27,411 - DEBUG - true | value = True
2018-05-30 15:02:27,411 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,411 - DEBUG - 检查项['Guild', 'update']
2018-05-30 15:02:27,411 - DEBUG - flag = =
2018-05-30 15:02:27,411 - DEBUG - 进入等于
2018-05-30 15:02:27,412 - DEBUG - 进入等于阶段后的---->预期param[0] = True
2018-05-30 15:02:27,412 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,412 - DEBUG - 进入等于阶段后的---->实际value 值 = True
2018-05-30 15:02:27,412 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,413 - DEBUG - 进入elif2
2018-05-30 15:02:27,413 - DEBUG - true | value = True
2018-05-30 15:02:27,413 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,413 - DEBUG - 检查项['OrderForm', 'read']
2018-05-30 15:02:27,413 - DEBUG - flag = =
2018-05-30 15:02:27,414 - DEBUG - 进入等于
2018-05-30 15:02:27,414 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,414 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,414 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,414 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,415 - DEBUG - 进入elif2
2018-05-30 15:02:27,415 - DEBUG - true | value = False
2018-05-30 15:02:27,415 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,415 - DEBUG - 检查项['OrderForm', 'update']
2018-05-30 15:02:27,416 - DEBUG - flag = =
2018-05-30 15:02:27,416 - DEBUG - 进入等于
2018-05-30 15:02:27,416 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,416 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,417 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,417 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,417 - DEBUG - 进入elif2
2018-05-30 15:02:27,418 - DEBUG - true | value = False
2018-05-30 15:02:27,418 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,418 - DEBUG - 检查项['OrgWallet', 'read']
2018-05-30 15:02:27,418 - DEBUG - flag = =
2018-05-30 15:02:27,419 - DEBUG - 进入等于
2018-05-30 15:02:27,419 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,419 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,419 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,420 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,420 - DEBUG - 进入elif2
2018-05-30 15:02:27,420 - DEBUG - true | value = False
2018-05-30 15:02:27,420 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,421 - DEBUG - 检查项['OrgWallet', 'update']
2018-05-30 15:02:27,421 - DEBUG - flag = =
2018-05-30 15:02:27,421 - DEBUG - 进入等于
2018-05-30 15:02:27,421 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,422 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,422 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,422 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,423 - DEBUG - 进入elif2
2018-05-30 15:02:27,423 - DEBUG - true | value = False
2018-05-30 15:02:27,423 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,423 - DEBUG - 检查项['Organization', 'destroy']
2018-05-30 15:02:27,424 - DEBUG - flag = =
2018-05-30 15:02:27,424 - DEBUG - 进入等于
2018-05-30 15:02:27,424 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,424 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,424 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,425 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,425 - DEBUG - 进入elif2
2018-05-30 15:02:27,425 - DEBUG - true | value = False
2018-05-30 15:02:27,425 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,426 - DEBUG - 检查项['Organization', 'read']
2018-05-30 15:02:27,426 - DEBUG - flag = =
2018-05-30 15:02:27,426 - DEBUG - 进入等于
2018-05-30 15:02:27,426 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,426 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,427 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,427 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,427 - DEBUG - 进入elif2
2018-05-30 15:02:27,427 - DEBUG - true | value = False
2018-05-30 15:02:27,428 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,428 - DEBUG - 检查项['Organization', 'update']
2018-05-30 15:02:27,428 - DEBUG - flag = =
2018-05-30 15:02:27,428 - DEBUG - 进入等于
2018-05-30 15:02:27,428 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,429 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,429 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,429 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,429 - DEBUG - 进入elif2
2018-05-30 15:02:27,430 - DEBUG - true | value = False
2018-05-30 15:02:27,430 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,430 - DEBUG - 检查项['Photo', 'create']
2018-05-30 15:02:27,430 - DEBUG - flag = =
2018-05-30 15:02:27,430 - DEBUG - 进入等于
2018-05-30 15:02:27,431 - DEBUG - 进入等于阶段后的---->预期param[0] = True
2018-05-30 15:02:27,431 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,431 - DEBUG - 进入等于阶段后的---->实际value 值 = True
2018-05-30 15:02:27,431 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,431 - DEBUG - 进入elif2
2018-05-30 15:02:27,432 - DEBUG - true | value = True
2018-05-30 15:02:27,432 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,432 - DEBUG - 检查项['Photo', 'destroy']
2018-05-30 15:02:27,432 - DEBUG - flag = =
2018-05-30 15:02:27,433 - DEBUG - 进入等于
2018-05-30 15:02:27,433 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,433 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,433 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,433 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,434 - DEBUG - 进入elif2
2018-05-30 15:02:27,434 - DEBUG - true | value = False
2018-05-30 15:02:27,434 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,434 - DEBUG - 检查项['Photo', 'read']
2018-05-30 15:02:27,434 - DEBUG - flag = =
2018-05-30 15:02:27,435 - DEBUG - 进入等于
2018-05-30 15:02:27,435 - DEBUG - 进入等于阶段后的---->预期param[0] = True
2018-05-30 15:02:27,435 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,435 - DEBUG - 进入等于阶段后的---->实际value 值 = True
2018-05-30 15:02:27,436 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,436 - DEBUG - 进入elif2
2018-05-30 15:02:27,436 - DEBUG - true | value = True
2018-05-30 15:02:27,436 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,436 - DEBUG - 检查项['Procedure', 'create']
2018-05-30 15:02:27,437 - DEBUG - flag = =
2018-05-30 15:02:27,437 - DEBUG - 进入等于
2018-05-30 15:02:27,437 - DEBUG - 进入等于阶段后的---->预期param[0] = True
2018-05-30 15:02:27,437 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,438 - DEBUG - 进入等于阶段后的---->实际value 值 = True
2018-05-30 15:02:27,438 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,438 - DEBUG - 进入elif2
2018-05-30 15:02:27,438 - DEBUG - true | value = True
2018-05-30 15:02:27,438 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,439 - DEBUG - 检查项['Procedure', 'read']
2018-05-30 15:02:27,439 - DEBUG - flag = =
2018-05-30 15:02:27,439 - DEBUG - 进入等于
2018-05-30 15:02:27,439 - DEBUG - 进入等于阶段后的---->预期param[0] = True
2018-05-30 15:02:27,440 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,440 - DEBUG - 进入等于阶段后的---->实际value 值 = True
2018-05-30 15:02:27,440 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,440 - DEBUG - 进入elif2
2018-05-30 15:02:27,441 - DEBUG - true | value = True
2018-05-30 15:02:27,441 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,441 - DEBUG - 检查项['Procedure', 'update']
2018-05-30 15:02:27,441 - DEBUG - flag = =
2018-05-30 15:02:27,441 - DEBUG - 进入等于
2018-05-30 15:02:27,442 - DEBUG - 进入等于阶段后的---->预期param[0] = True
2018-05-30 15:02:27,442 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,442 - DEBUG - 进入等于阶段后的---->实际value 值 = True
2018-05-30 15:02:27,442 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,442 - DEBUG - 进入elif2
2018-05-30 15:02:27,442 - DEBUG - true | value = True
2018-05-30 15:02:27,443 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,443 - DEBUG - 检查项['Product', 'audit']
2018-05-30 15:02:27,443 - DEBUG - flag = =
2018-05-30 15:02:27,443 - DEBUG - 进入等于
2018-05-30 15:02:27,443 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,444 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,444 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,444 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,444 - DEBUG - 进入elif2
2018-05-30 15:02:27,444 - DEBUG - true | value = False
2018-05-30 15:02:27,444 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,445 - DEBUG - 检查项['Product', 'create']
2018-05-30 15:02:27,445 - DEBUG - flag = =
2018-05-30 15:02:27,445 - DEBUG - 进入等于
2018-05-30 15:02:27,445 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,445 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,445 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,446 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,446 - DEBUG - 进入elif2
2018-05-30 15:02:27,446 - DEBUG - true | value = False
2018-05-30 15:02:27,446 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,446 - DEBUG - 检查项['Product', 'destroy']
2018-05-30 15:02:27,446 - DEBUG - flag = =
2018-05-30 15:02:27,447 - DEBUG - 进入等于
2018-05-30 15:02:27,447 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,447 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,447 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,447 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,447 - DEBUG - 进入elif2
2018-05-30 15:02:27,448 - DEBUG - true | value = False
2018-05-30 15:02:27,448 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,448 - DEBUG - 检查项['Product', 'publish']
2018-05-30 15:02:27,448 - DEBUG - flag = =
2018-05-30 15:02:27,448 - DEBUG - 进入等于
2018-05-30 15:02:27,448 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,449 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,449 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,449 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,449 - DEBUG - 进入elif2
2018-05-30 15:02:27,449 - DEBUG - true | value = False
2018-05-30 15:02:27,449 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,450 - DEBUG - 检查项['Product', 'read']
2018-05-30 15:02:27,450 - DEBUG - flag = =
2018-05-30 15:02:27,450 - DEBUG - 进入等于
2018-05-30 15:02:27,450 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,450 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,450 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,451 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,451 - DEBUG - 进入elif2
2018-05-30 15:02:27,451 - DEBUG - true | value = False
2018-05-30 15:02:27,451 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,451 - DEBUG - 检查项['Product', 'recall']
2018-05-30 15:02:27,451 - DEBUG - flag = =
2018-05-30 15:02:27,452 - DEBUG - 进入等于
2018-05-30 15:02:27,452 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,452 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,452 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,452 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,452 - DEBUG - 进入elif2
2018-05-30 15:02:27,452 - DEBUG - true | value = False
2018-05-30 15:02:27,453 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,453 - DEBUG - 检查项['Product', 'update']
2018-05-30 15:02:27,453 - DEBUG - flag = =
2018-05-30 15:02:27,453 - DEBUG - 进入等于
2018-05-30 15:02:27,453 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,453 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,454 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,454 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,454 - DEBUG - 进入elif2
2018-05-30 15:02:27,454 - DEBUG - true | value = False
2018-05-30 15:02:27,454 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,454 - DEBUG - 检查项['Team', 'create']
2018-05-30 15:02:27,455 - DEBUG - flag = =
2018-05-30 15:02:27,455 - DEBUG - 进入等于
2018-05-30 15:02:27,455 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,455 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,456 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,456 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,456 - DEBUG - 进入elif2
2018-05-30 15:02:27,456 - DEBUG - true | value = False
2018-05-30 15:02:27,456 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,457 - DEBUG - 检查项['Team', 'destroy']
2018-05-30 15:02:27,457 - DEBUG - flag = =
2018-05-30 15:02:27,457 - DEBUG - 进入等于
2018-05-30 15:02:27,457 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,457 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,457 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,458 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,458 - DEBUG - 进入elif2
2018-05-30 15:02:27,458 - DEBUG - true | value = False
2018-05-30 15:02:27,458 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,458 - DEBUG - 检查项['Team', 'read']
2018-05-30 15:02:27,458 - DEBUG - flag = =
2018-05-30 15:02:27,459 - DEBUG - 进入等于
2018-05-30 15:02:27,459 - DEBUG - 进入等于阶段后的---->预期param[0] = True
2018-05-30 15:02:27,459 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,459 - DEBUG - 进入等于阶段后的---->实际value 值 = True
2018-05-30 15:02:27,459 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,459 - DEBUG - 进入elif2
2018-05-30 15:02:27,460 - DEBUG - true | value = True
2018-05-30 15:02:27,460 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,460 - DEBUG - 检查项['Team', 'update']
2018-05-30 15:02:27,460 - DEBUG - flag = =
2018-05-30 15:02:27,460 - DEBUG - 进入等于
2018-05-30 15:02:27,460 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,461 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,461 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,461 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,461 - DEBUG - 进入elif2
2018-05-30 15:02:27,461 - DEBUG - true | value = False
2018-05-30 15:02:27,461 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,462 - DEBUG - 检查项['Visit', 'read']
2018-05-30 15:02:27,462 - DEBUG - flag = =
2018-05-30 15:02:27,462 - DEBUG - 进入等于
2018-05-30 15:02:27,462 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,462 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,462 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,463 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,463 - DEBUG - 进入elif2
2018-05-30 15:02:27,463 - DEBUG - true | value = False
2018-05-30 15:02:27,463 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,463 - DEBUG - 检查项['Visit', 'read']
2018-05-30 15:02:27,464 - DEBUG - flag = =
2018-05-30 15:02:27,464 - DEBUG - 进入等于
2018-05-30 15:02:27,464 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,464 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,464 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,465 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,465 - DEBUG - 进入elif2
2018-05-30 15:02:27,465 - DEBUG - true | value = False
2018-05-30 15:02:27,465 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,465 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,608 - INFO - 1. 接口编号 : 5_10
2018-05-30 15:02:27,609 - INFO - 2. 接口名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,609 - INFO - 3. 接口描述 : 县机构 - 扶贫专员
2018-05-30 15:02:27,609 - INFO - 4. 接口路由 : /api/v1/team/18953/can_do
2018-05-30 15:02:27,609 - INFO - 5. 接口方式 : GET
2018-05-30 15:02:27,609 - INFO - 6. 接口头部 : 
2018-05-30 15:02:27,610 - INFO - 7. 接口数据 : {'token': '4f7d9d3c6f7f49c3aa68c4dcae0c1237'}
2018-05-30 15:02:27,610 - INFO - 8. 接口检查 : True=[Archive][create];
False=[Archive][destroy];
False=[Archive][publish];
True=[Archive][read];
False=[Archive][recall];
False=[Archive][update];

False=[Client][admin];
True=[Client][create];
False=[Client][destroy];
True=[Client][read];
False=[Client][update];

False=[ClientKeyword][read];

False=[Department][destroy];
True=[Department][read];
False=[Department][update];

False=[EnablePackage][read];
False=[EnablePackage][update];

False=[Group][destroy];
True=[Group][read];
False=[Group][update];

True=[Guild][create];
False=[Guild][destroy];
True=[Guild][update];

False=[OrderForm][read];
False=[OrderForm][update];

False=[OrgWallet][read];
False=[OrgWallet][update];

False=[Organization][destroy];
False=[Organization][read];
False=[Organization][update];

True=[Photo][create];
False=[Photo][destroy];
True=[Photo][read];

True=[Procedure][create];
True=[Procedure][read];
False=[Procedure][update];

False=[Product][audit];
False=[Product][create];
False=[Product][destroy];
False=[Product][publish];
False=[Product][read];
False=[Product][recall];
False=[Product][update];

False=[Team][create];
False=[Team][destroy];
True=[Team][read];
False=[Team][update];

False=[Visit][read];

2018-05-30 15:02:27,611 - INFO - 9. 预期状态 ：
2018-05-30 15:02:27,611 - INFO - 10.接口预期 : 200
2018-05-30 15:02:27,612 - INFO - 11.接口返回 : {
    "Archive": {
        "create": true,
        "destroy": false,
        "publish": false,
        "read": true,
        "recall": false,
        "update": false
    },
    "Client": {
        "admin": false,
        "create": true,
        "destroy": false,
        "read": true,
        "update": false
    },
    "ClientKeyword": {
        "read": false
    },
    "Department": {
        "destroy": false,
        "read": true,
        "update": false
    },
    "EnablePackage": {
        "read": false,
        "update": false
    },
    "Group": {
        "destroy": false,
        "read": true,
        "update": false
    },
    "Guild": {
        "create": true,
        "destroy": false,
        "update": true
    },
    "OrderForm": {
        "read": false,
        "update": false
    },
    "OrgWallet": {
        "read": false,
        "update": false
    },
    "Organization": {
        "destroy": false,
        "read": false,
        "update": false
    },
    "Photo": {
        "create": true,
        "destroy": false,
        "read": true
    },
    "Procedure": {
        "create": true,
        "read": true,
        "update": false
    },
    "Product": {
        "audit": false,
        "create": false,
        "destroy": false,
        "publish": false,
        "read": false,
        "recall": false,
        "update": false
    },
    "Team": {
        "create": false,
        "destroy": false,
        "read": true,
        "update": false
    },
    "Visit": {
        "read": false
    }
}
2018-05-30 15:02:27,612 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,612 - DEBUG - 检查项['Archive', 'create']
2018-05-30 15:02:27,612 - DEBUG - flag = =
2018-05-30 15:02:27,613 - DEBUG - 进入等于
2018-05-30 15:02:27,613 - DEBUG - 进入等于阶段后的---->预期param[0] = True
2018-05-30 15:02:27,614 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,614 - DEBUG - 进入等于阶段后的---->实际value 值 = True
2018-05-30 15:02:27,614 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,614 - DEBUG - 进入elif2
2018-05-30 15:02:27,614 - DEBUG - true | value = True
2018-05-30 15:02:27,615 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,615 - DEBUG - 检查项['Archive', 'destroy']
2018-05-30 15:02:27,615 - DEBUG - flag = =
2018-05-30 15:02:27,615 - DEBUG - 进入等于
2018-05-30 15:02:27,616 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,616 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,616 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,617 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,617 - DEBUG - 进入elif2
2018-05-30 15:02:27,617 - DEBUG - true | value = False
2018-05-30 15:02:27,617 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,618 - DEBUG - 检查项['Archive', 'publish']
2018-05-30 15:02:27,618 - DEBUG - flag = =
2018-05-30 15:02:27,618 - DEBUG - 进入等于
2018-05-30 15:02:27,618 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,619 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,619 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,619 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,619 - DEBUG - 进入elif2
2018-05-30 15:02:27,620 - DEBUG - true | value = False
2018-05-30 15:02:27,620 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,620 - DEBUG - 检查项['Archive', 'read']
2018-05-30 15:02:27,621 - DEBUG - flag = =
2018-05-30 15:02:27,621 - DEBUG - 进入等于
2018-05-30 15:02:27,621 - DEBUG - 进入等于阶段后的---->预期param[0] = True
2018-05-30 15:02:27,622 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,622 - DEBUG - 进入等于阶段后的---->实际value 值 = True
2018-05-30 15:02:27,622 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,623 - DEBUG - 进入elif2
2018-05-30 15:02:27,623 - DEBUG - true | value = True
2018-05-30 15:02:27,623 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,623 - DEBUG - 检查项['Archive', 'recall']
2018-05-30 15:02:27,623 - DEBUG - flag = =
2018-05-30 15:02:27,624 - DEBUG - 进入等于
2018-05-30 15:02:27,624 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,624 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,624 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,625 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,625 - DEBUG - 进入elif2
2018-05-30 15:02:27,625 - DEBUG - true | value = False
2018-05-30 15:02:27,625 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,625 - DEBUG - 检查项['Archive', 'update']
2018-05-30 15:02:27,626 - DEBUG - flag = =
2018-05-30 15:02:27,626 - DEBUG - 进入等于
2018-05-30 15:02:27,626 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,626 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,627 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,627 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,627 - DEBUG - 进入elif2
2018-05-30 15:02:27,627 - DEBUG - true | value = False
2018-05-30 15:02:27,627 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,628 - DEBUG - 检查项['Client', 'admin']
2018-05-30 15:02:27,628 - DEBUG - flag = =
2018-05-30 15:02:27,628 - DEBUG - 进入等于
2018-05-30 15:02:27,628 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,628 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,629 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,629 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,630 - DEBUG - 进入elif2
2018-05-30 15:02:27,630 - DEBUG - true | value = False
2018-05-30 15:02:27,630 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,630 - DEBUG - 检查项['Client', 'create']
2018-05-30 15:02:27,631 - DEBUG - flag = =
2018-05-30 15:02:27,631 - DEBUG - 进入等于
2018-05-30 15:02:27,631 - DEBUG - 进入等于阶段后的---->预期param[0] = True
2018-05-30 15:02:27,631 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,632 - DEBUG - 进入等于阶段后的---->实际value 值 = True
2018-05-30 15:02:27,632 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,632 - DEBUG - 进入elif2
2018-05-30 15:02:27,632 - DEBUG - true | value = True
2018-05-30 15:02:27,633 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,633 - DEBUG - 检查项['Client', 'destroy']
2018-05-30 15:02:27,633 - DEBUG - flag = =
2018-05-30 15:02:27,633 - DEBUG - 进入等于
2018-05-30 15:02:27,633 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,634 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,634 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,634 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,634 - DEBUG - 进入elif2
2018-05-30 15:02:27,635 - DEBUG - true | value = False
2018-05-30 15:02:27,635 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,635 - DEBUG - 检查项['Client', 'read']
2018-05-30 15:02:27,636 - DEBUG - flag = =
2018-05-30 15:02:27,636 - DEBUG - 进入等于
2018-05-30 15:02:27,636 - DEBUG - 进入等于阶段后的---->预期param[0] = True
2018-05-30 15:02:27,636 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,637 - DEBUG - 进入等于阶段后的---->实际value 值 = True
2018-05-30 15:02:27,637 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,637 - DEBUG - 进入elif2
2018-05-30 15:02:27,637 - DEBUG - true | value = True
2018-05-30 15:02:27,638 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,638 - DEBUG - 检查项['Client', 'update']
2018-05-30 15:02:27,638 - DEBUG - flag = =
2018-05-30 15:02:27,639 - DEBUG - 进入等于
2018-05-30 15:02:27,639 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,639 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,640 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,640 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,640 - DEBUG - 进入elif2
2018-05-30 15:02:27,640 - DEBUG - true | value = False
2018-05-30 15:02:27,640 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,640 - DEBUG - 检查项['ClientKeyword', 'read']
2018-05-30 15:02:27,641 - DEBUG - flag = =
2018-05-30 15:02:27,641 - DEBUG - 进入等于
2018-05-30 15:02:27,641 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,641 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,641 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,642 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,642 - DEBUG - 进入elif2
2018-05-30 15:02:27,642 - DEBUG - true | value = False
2018-05-30 15:02:27,642 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,642 - DEBUG - 检查项['Department', 'destroy']
2018-05-30 15:02:27,642 - DEBUG - flag = =
2018-05-30 15:02:27,643 - DEBUG - 进入等于
2018-05-30 15:02:27,643 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,643 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,643 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,643 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,643 - DEBUG - 进入elif2
2018-05-30 15:02:27,644 - DEBUG - true | value = False
2018-05-30 15:02:27,644 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,644 - DEBUG - 检查项['Department', 'read']
2018-05-30 15:02:27,644 - DEBUG - flag = =
2018-05-30 15:02:27,644 - DEBUG - 进入等于
2018-05-30 15:02:27,644 - DEBUG - 进入等于阶段后的---->预期param[0] = True
2018-05-30 15:02:27,645 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,645 - DEBUG - 进入等于阶段后的---->实际value 值 = True
2018-05-30 15:02:27,645 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,646 - DEBUG - 进入elif2
2018-05-30 15:02:27,646 - DEBUG - true | value = True
2018-05-30 15:02:27,646 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,646 - DEBUG - 检查项['Department', 'update']
2018-05-30 15:02:27,646 - DEBUG - flag = =
2018-05-30 15:02:27,647 - DEBUG - 进入等于
2018-05-30 15:02:27,647 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,647 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,647 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,647 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,647 - DEBUG - 进入elif2
2018-05-30 15:02:27,648 - DEBUG - true | value = False
2018-05-30 15:02:27,648 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,648 - DEBUG - 检查项['EnablePackage', 'read']
2018-05-30 15:02:27,648 - DEBUG - flag = =
2018-05-30 15:02:27,648 - DEBUG - 进入等于
2018-05-30 15:02:27,648 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,649 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,649 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,649 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,649 - DEBUG - 进入elif2
2018-05-30 15:02:27,649 - DEBUG - true | value = False
2018-05-30 15:02:27,649 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,650 - DEBUG - 检查项['EnablePackage', 'update']
2018-05-30 15:02:27,650 - DEBUG - flag = =
2018-05-30 15:02:27,650 - DEBUG - 进入等于
2018-05-30 15:02:27,650 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,650 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,650 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,651 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,651 - DEBUG - 进入elif2
2018-05-30 15:02:27,651 - DEBUG - true | value = False
2018-05-30 15:02:27,651 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,651 - DEBUG - 检查项['Group', 'destroy']
2018-05-30 15:02:27,652 - DEBUG - flag = =
2018-05-30 15:02:27,652 - DEBUG - 进入等于
2018-05-30 15:02:27,652 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,652 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,652 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,653 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,653 - DEBUG - 进入elif2
2018-05-30 15:02:27,653 - DEBUG - true | value = False
2018-05-30 15:02:27,653 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,654 - DEBUG - 检查项['Group', 'read']
2018-05-30 15:02:27,654 - DEBUG - flag = =
2018-05-30 15:02:27,654 - DEBUG - 进入等于
2018-05-30 15:02:27,654 - DEBUG - 进入等于阶段后的---->预期param[0] = True
2018-05-30 15:02:27,655 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,655 - DEBUG - 进入等于阶段后的---->实际value 值 = True
2018-05-30 15:02:27,655 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,655 - DEBUG - 进入elif2
2018-05-30 15:02:27,655 - DEBUG - true | value = True
2018-05-30 15:02:27,655 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,656 - DEBUG - 检查项['Group', 'update']
2018-05-30 15:02:27,656 - DEBUG - flag = =
2018-05-30 15:02:27,656 - DEBUG - 进入等于
2018-05-30 15:02:27,657 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,657 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,657 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,658 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,658 - DEBUG - 进入elif2
2018-05-30 15:02:27,658 - DEBUG - true | value = False
2018-05-30 15:02:27,658 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,658 - DEBUG - 检查项['Guild', 'create']
2018-05-30 15:02:27,659 - DEBUG - flag = =
2018-05-30 15:02:27,659 - DEBUG - 进入等于
2018-05-30 15:02:27,659 - DEBUG - 进入等于阶段后的---->预期param[0] = True
2018-05-30 15:02:27,659 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,659 - DEBUG - 进入等于阶段后的---->实际value 值 = True
2018-05-30 15:02:27,660 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,660 - DEBUG - 进入elif2
2018-05-30 15:02:27,660 - DEBUG - true | value = True
2018-05-30 15:02:27,660 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,661 - DEBUG - 检查项['Guild', 'destroy']
2018-05-30 15:02:27,661 - DEBUG - flag = =
2018-05-30 15:02:27,662 - DEBUG - 进入等于
2018-05-30 15:02:27,662 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,662 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,662 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,662 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,663 - DEBUG - 进入elif2
2018-05-30 15:02:27,663 - DEBUG - true | value = False
2018-05-30 15:02:27,663 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,663 - DEBUG - 检查项['Guild', 'update']
2018-05-30 15:02:27,663 - DEBUG - flag = =
2018-05-30 15:02:27,663 - DEBUG - 进入等于
2018-05-30 15:02:27,664 - DEBUG - 进入等于阶段后的---->预期param[0] = True
2018-05-30 15:02:27,664 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,664 - DEBUG - 进入等于阶段后的---->实际value 值 = True
2018-05-30 15:02:27,664 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,664 - DEBUG - 进入elif2
2018-05-30 15:02:27,664 - DEBUG - true | value = True
2018-05-30 15:02:27,665 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,665 - DEBUG - 检查项['OrderForm', 'read']
2018-05-30 15:02:27,665 - DEBUG - flag = =
2018-05-30 15:02:27,665 - DEBUG - 进入等于
2018-05-30 15:02:27,665 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,665 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,666 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,666 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,666 - DEBUG - 进入elif2
2018-05-30 15:02:27,666 - DEBUG - true | value = False
2018-05-30 15:02:27,666 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,666 - DEBUG - 检查项['OrderForm', 'update']
2018-05-30 15:02:27,667 - DEBUG - flag = =
2018-05-30 15:02:27,667 - DEBUG - 进入等于
2018-05-30 15:02:27,667 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,667 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,667 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,667 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,668 - DEBUG - 进入elif2
2018-05-30 15:02:27,668 - DEBUG - true | value = False
2018-05-30 15:02:27,668 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,668 - DEBUG - 检查项['OrgWallet', 'read']
2018-05-30 15:02:27,668 - DEBUG - flag = =
2018-05-30 15:02:27,669 - DEBUG - 进入等于
2018-05-30 15:02:27,669 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,669 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,670 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,670 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,670 - DEBUG - 进入elif2
2018-05-30 15:02:27,670 - DEBUG - true | value = False
2018-05-30 15:02:27,670 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,671 - DEBUG - 检查项['OrgWallet', 'update']
2018-05-30 15:02:27,671 - DEBUG - flag = =
2018-05-30 15:02:27,671 - DEBUG - 进入等于
2018-05-30 15:02:27,671 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,671 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,672 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,672 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,672 - DEBUG - 进入elif2
2018-05-30 15:02:27,672 - DEBUG - true | value = False
2018-05-30 15:02:27,673 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,673 - DEBUG - 检查项['Organization', 'destroy']
2018-05-30 15:02:27,673 - DEBUG - flag = =
2018-05-30 15:02:27,674 - DEBUG - 进入等于
2018-05-30 15:02:27,674 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,674 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,674 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,675 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,675 - DEBUG - 进入elif2
2018-05-30 15:02:27,675 - DEBUG - true | value = False
2018-05-30 15:02:27,675 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,676 - DEBUG - 检查项['Organization', 'read']
2018-05-30 15:02:27,676 - DEBUG - flag = =
2018-05-30 15:02:27,676 - DEBUG - 进入等于
2018-05-30 15:02:27,676 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,677 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,677 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,677 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,678 - DEBUG - 进入elif2
2018-05-30 15:02:27,678 - DEBUG - true | value = False
2018-05-30 15:02:27,678 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,678 - DEBUG - 检查项['Organization', 'update']
2018-05-30 15:02:27,679 - DEBUG - flag = =
2018-05-30 15:02:27,679 - DEBUG - 进入等于
2018-05-30 15:02:27,679 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,679 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,679 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,679 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,680 - DEBUG - 进入elif2
2018-05-30 15:02:27,680 - DEBUG - true | value = False
2018-05-30 15:02:27,680 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,680 - DEBUG - 检查项['Photo', 'create']
2018-05-30 15:02:27,680 - DEBUG - flag = =
2018-05-30 15:02:27,681 - DEBUG - 进入等于
2018-05-30 15:02:27,681 - DEBUG - 进入等于阶段后的---->预期param[0] = True
2018-05-30 15:02:27,681 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,681 - DEBUG - 进入等于阶段后的---->实际value 值 = True
2018-05-30 15:02:27,681 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,681 - DEBUG - 进入elif2
2018-05-30 15:02:27,682 - DEBUG - true | value = True
2018-05-30 15:02:27,682 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,682 - DEBUG - 检查项['Photo', 'destroy']
2018-05-30 15:02:27,682 - DEBUG - flag = =
2018-05-30 15:02:27,682 - DEBUG - 进入等于
2018-05-30 15:02:27,683 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,683 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,683 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,683 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,683 - DEBUG - 进入elif2
2018-05-30 15:02:27,684 - DEBUG - true | value = False
2018-05-30 15:02:27,684 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,684 - DEBUG - 检查项['Photo', 'read']
2018-05-30 15:02:27,684 - DEBUG - flag = =
2018-05-30 15:02:27,684 - DEBUG - 进入等于
2018-05-30 15:02:27,685 - DEBUG - 进入等于阶段后的---->预期param[0] = True
2018-05-30 15:02:27,685 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,685 - DEBUG - 进入等于阶段后的---->实际value 值 = True
2018-05-30 15:02:27,686 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,686 - DEBUG - 进入elif2
2018-05-30 15:02:27,686 - DEBUG - true | value = True
2018-05-30 15:02:27,686 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,687 - DEBUG - 检查项['Procedure', 'create']
2018-05-30 15:02:27,687 - DEBUG - flag = =
2018-05-30 15:02:27,687 - DEBUG - 进入等于
2018-05-30 15:02:27,687 - DEBUG - 进入等于阶段后的---->预期param[0] = True
2018-05-30 15:02:27,688 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,688 - DEBUG - 进入等于阶段后的---->实际value 值 = True
2018-05-30 15:02:27,688 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,688 - DEBUG - 进入elif2
2018-05-30 15:02:27,689 - DEBUG - true | value = True
2018-05-30 15:02:27,689 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,689 - DEBUG - 检查项['Procedure', 'read']
2018-05-30 15:02:27,690 - DEBUG - flag = =
2018-05-30 15:02:27,690 - DEBUG - 进入等于
2018-05-30 15:02:27,690 - DEBUG - 进入等于阶段后的---->预期param[0] = True
2018-05-30 15:02:27,690 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,691 - DEBUG - 进入等于阶段后的---->实际value 值 = True
2018-05-30 15:02:27,691 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,691 - DEBUG - 进入elif2
2018-05-30 15:02:27,691 - DEBUG - true | value = True
2018-05-30 15:02:27,692 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,692 - DEBUG - 检查项['Procedure', 'update']
2018-05-30 15:02:27,692 - DEBUG - flag = =
2018-05-30 15:02:27,692 - DEBUG - 进入等于
2018-05-30 15:02:27,693 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,693 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,694 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,694 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,694 - DEBUG - 进入elif2
2018-05-30 15:02:27,694 - DEBUG - true | value = False
2018-05-30 15:02:27,695 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,695 - DEBUG - 检查项['Product', 'audit']
2018-05-30 15:02:27,695 - DEBUG - flag = =
2018-05-30 15:02:27,696 - DEBUG - 进入等于
2018-05-30 15:02:27,696 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,696 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,696 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,696 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,697 - DEBUG - 进入elif2
2018-05-30 15:02:27,697 - DEBUG - true | value = False
2018-05-30 15:02:27,697 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,697 - DEBUG - 检查项['Product', 'create']
2018-05-30 15:02:27,698 - DEBUG - flag = =
2018-05-30 15:02:27,698 - DEBUG - 进入等于
2018-05-30 15:02:27,698 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,698 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,699 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,699 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,699 - DEBUG - 进入elif2
2018-05-30 15:02:27,699 - DEBUG - true | value = False
2018-05-30 15:02:27,700 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,700 - DEBUG - 检查项['Product', 'destroy']
2018-05-30 15:02:27,700 - DEBUG - flag = =
2018-05-30 15:02:27,700 - DEBUG - 进入等于
2018-05-30 15:02:27,701 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,715 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,715 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,715 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,716 - DEBUG - 进入elif2
2018-05-30 15:02:27,716 - DEBUG - true | value = False
2018-05-30 15:02:27,716 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,717 - DEBUG - 检查项['Product', 'publish']
2018-05-30 15:02:27,717 - DEBUG - flag = =
2018-05-30 15:02:27,717 - DEBUG - 进入等于
2018-05-30 15:02:27,718 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,718 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,718 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,719 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,719 - DEBUG - 进入elif2
2018-05-30 15:02:27,719 - DEBUG - true | value = False
2018-05-30 15:02:27,720 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,720 - DEBUG - 检查项['Product', 'read']
2018-05-30 15:02:27,721 - DEBUG - flag = =
2018-05-30 15:02:27,721 - DEBUG - 进入等于
2018-05-30 15:02:27,721 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,722 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,722 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,722 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,723 - DEBUG - 进入elif2
2018-05-30 15:02:27,723 - DEBUG - true | value = False
2018-05-30 15:02:27,723 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,724 - DEBUG - 检查项['Product', 'recall']
2018-05-30 15:02:27,724 - DEBUG - flag = =
2018-05-30 15:02:27,724 - DEBUG - 进入等于
2018-05-30 15:02:27,724 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,725 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,725 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,725 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,725 - DEBUG - 进入elif2
2018-05-30 15:02:27,726 - DEBUG - true | value = False
2018-05-30 15:02:27,726 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,726 - DEBUG - 检查项['Product', 'update']
2018-05-30 15:02:27,726 - DEBUG - flag = =
2018-05-30 15:02:27,727 - DEBUG - 进入等于
2018-05-30 15:02:27,727 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,727 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,727 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,728 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,728 - DEBUG - 进入elif2
2018-05-30 15:02:27,728 - DEBUG - true | value = False
2018-05-30 15:02:27,728 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,729 - DEBUG - 检查项['Team', 'create']
2018-05-30 15:02:27,729 - DEBUG - flag = =
2018-05-30 15:02:27,729 - DEBUG - 进入等于
2018-05-30 15:02:27,730 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,730 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,730 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,731 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,731 - DEBUG - 进入elif2
2018-05-30 15:02:27,731 - DEBUG - true | value = False
2018-05-30 15:02:27,732 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,732 - DEBUG - 检查项['Team', 'destroy']
2018-05-30 15:02:27,732 - DEBUG - flag = =
2018-05-30 15:02:27,733 - DEBUG - 进入等于
2018-05-30 15:02:27,733 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,733 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,734 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,734 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,734 - DEBUG - 进入elif2
2018-05-30 15:02:27,735 - DEBUG - true | value = False
2018-05-30 15:02:27,735 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,735 - DEBUG - 检查项['Team', 'read']
2018-05-30 15:02:27,736 - DEBUG - flag = =
2018-05-30 15:02:27,736 - DEBUG - 进入等于
2018-05-30 15:02:27,736 - DEBUG - 进入等于阶段后的---->预期param[0] = True
2018-05-30 15:02:27,736 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,737 - DEBUG - 进入等于阶段后的---->实际value 值 = True
2018-05-30 15:02:27,737 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,737 - DEBUG - 进入elif2
2018-05-30 15:02:27,738 - DEBUG - true | value = True
2018-05-30 15:02:27,738 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,738 - DEBUG - 检查项['Team', 'update']
2018-05-30 15:02:27,739 - DEBUG - flag = =
2018-05-30 15:02:27,739 - DEBUG - 进入等于
2018-05-30 15:02:27,740 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,740 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,740 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,740 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,740 - DEBUG - 进入elif2
2018-05-30 15:02:27,741 - DEBUG - true | value = False
2018-05-30 15:02:27,741 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,741 - DEBUG - 检查项['Visit', 'read']
2018-05-30 15:02:27,741 - DEBUG - flag = =
2018-05-30 15:02:27,742 - DEBUG - 进入等于
2018-05-30 15:02:27,742 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,742 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,742 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,743 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,743 - DEBUG - 进入elif2
2018-05-30 15:02:27,743 - DEBUG - true | value = False
2018-05-30 15:02:27,743 - DEBUG - ----------进入检查点数据校验-------------
2018-05-30 15:02:27,743 - DEBUG - 检查项['Visit', 'read']
2018-05-30 15:02:27,744 - DEBUG - flag = =
2018-05-30 15:02:27,744 - DEBUG - 进入等于
2018-05-30 15:02:27,744 - DEBUG - 进入等于阶段后的---->预期param[0] = False
2018-05-30 15:02:27,744 - DEBUG - 进入等于阶段后的---->type(param[0]) 值 = <class 'str'>
2018-05-30 15:02:27,745 - DEBUG - 进入等于阶段后的---->实际value 值 = False
2018-05-30 15:02:27,745 - DEBUG - 进入等于阶段后的---->type(value) 值 = <class 'bool'>
2018-05-30 15:02:27,745 - DEBUG - 进入elif2
2018-05-30 15:02:27,745 - DEBUG - true | value = False
2018-05-30 15:02:27,745 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,746 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,746 - INFO - 未执行测试用例编号 : 6_1 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,746 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,747 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,747 - INFO - 未执行测试用例编号 : 6_2 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,747 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,748 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,748 - INFO - 未执行测试用例编号 : 6_3 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,748 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,749 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,749 - INFO - 未执行测试用例编号 : 6_4 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,749 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,750 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,750 - INFO - 未执行测试用例编号 : 6_5 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,750 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,750 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,751 - INFO - 未执行测试用例编号 : 6_6 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,751 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,751 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,751 - INFO - 未执行测试用例编号 : 6_7 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,752 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,752 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,752 - INFO - 未执行测试用例编号 : 6_8 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,752 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,753 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,753 - INFO - 未执行测试用例编号 : 6_9 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,753 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,753 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,754 - INFO - 未执行测试用例编号 : 6_10 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,754 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,754 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,755 - INFO - 未执行测试用例编号 : 6_11 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,755 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,755 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,755 - INFO - 未执行测试用例编号 : 6_12 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,756 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,756 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,756 - INFO - 未执行测试用例编号 : 6_13 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,756 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,757 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,757 - INFO - 未执行测试用例编号 : 6_14 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,757 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,757 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,758 - INFO - 未执行测试用例编号 : 6_15 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,758 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,758 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,758 - INFO - 未执行测试用例编号 : 6_16 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,759 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,759 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,759 - INFO - 未执行测试用例编号 : 6_17 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,759 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,759 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,760 - INFO - 未执行测试用例编号 : 6_18 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,760 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,760 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,760 - INFO - 未执行测试用例编号 : 6_19 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,761 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,761 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,761 - INFO - 未执行测试用例编号 : 6_20 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,762 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,762 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,762 - INFO - 未执行测试用例编号 : 6_21 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,762 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,762 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,763 - INFO - 未执行测试用例编号 : 6_22 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,763 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,763 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,763 - INFO - 未执行测试用例编号 : 6_23 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,764 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,764 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,764 - INFO - 未执行测试用例编号 : 6_24 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,765 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,765 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,765 - INFO - 未执行测试用例编号 : 6_25 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,765 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,766 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,766 - INFO - 未执行测试用例编号 : 6_26 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,766 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,766 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,767 - INFO - 未执行测试用例编号 : 6_27 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,767 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,767 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,767 - INFO - 未执行测试用例编号 : 6_28 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,767 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,767 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,768 - INFO - 未执行测试用例编号 : 6_29 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,768 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,768 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,768 - INFO - 未执行测试用例编号 : 6_30 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,769 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,769 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,769 - INFO - 未执行测试用例编号 : 6_31 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,769 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,769 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,770 - INFO - 未执行测试用例编号 : 6_32 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,770 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,770 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,770 - INFO - 未执行测试用例编号 : 6_33 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,770 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,771 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,771 - INFO - 未执行测试用例编号 : 6_34 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,771 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,772 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,772 - INFO - 未执行测试用例编号 : 6_35 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,772 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,772 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,773 - INFO - 未执行测试用例编号 : 6_36 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,773 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,773 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,773 - INFO - 未执行测试用例编号 : 6_37 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,774 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,774 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,774 - INFO - 未执行测试用例编号 : 6_38 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,774 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,774 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,775 - INFO - 未执行测试用例编号 : 6_39 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,775 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,775 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,775 - INFO - 未执行测试用例编号 : 6_40 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,776 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,776 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,776 - INFO - 未执行测试用例编号 : 6_41 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,776 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,776 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,777 - INFO - 未执行测试用例编号 : 6_42 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,777 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,777 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,777 - INFO - 未执行测试用例编号 : 6_43 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,777 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,778 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,778 - INFO - 未执行测试用例编号 : 6_44 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,778 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,778 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,778 - INFO - 未执行测试用例编号 : 6_45 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,779 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,779 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,779 - INFO - 未执行测试用例编号 : 6_46 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,779 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,779 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,780 - INFO - 未执行测试用例编号 : 6_47 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,780 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,780 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,780 - INFO - 未执行测试用例编号 : 6_48 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,780 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,780 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,781 - INFO - 未执行测试用例编号 : 6_49 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,781 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,781 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,782 - INFO - 未执行测试用例编号 : 6_50 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,782 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,782 - INFO - ------------------------------------用例开始------------------------------------
2018-05-30 15:02:27,782 - INFO - 未执行测试用例编号 : 6_51 | 名称 : Team_Construction - 模块权限
2018-05-30 15:02:27,782 - INFO - ------------------------------------用例结束------------------------------------

2018-05-30 15:02:27,783 - INFO - ****************************************SpaceAPI_Private：结束****************************************

